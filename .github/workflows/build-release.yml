name: Build for Release
run-name: Build All Targets for Release ${{ github.event.release.tag_name }}

on:
  release:
    types:
      - published

jobs:
  lint:
    name: Run Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/run-linting

  test:
    name: Run Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/run-tests

  build:
    needs: test
    strategy:
      matrix:
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    env:
      FILE_NAME: licer-${{ github.event.release.tag_name }}-${{ matrix.target }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - run: rustup target add ${{ matrix.target }}
      - if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install -y gcc-aarch64-linux-gnu
      - run: >-
          cargo build --release --target ${{ matrix.target }} --config target.aarch64-unknown-linux-gnu.linker=\"aarch64-linux-gnu-gcc\"
          &&
          cd ./target/${{ matrix.target }}/release
          &&
          tar -czf ./licer.tar.gz ./licer${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          &&
          mv ./licer.tar.gz ./${{ env.FILE_NAME }}.tar.gz
          &&
          gh release upload ${{ github.event.release.tag_name }} ./${{ env.FILE_NAME }}.tar.gz
        shell: bash
